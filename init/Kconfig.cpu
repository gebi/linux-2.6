choice
	prompt "ZenSched CPU Scheduler Choice"
	default CPU_BFS
	help
	  Here you can choose the CPU scheduler to be compiled with the kernel.

	  If unsure, say CPU_BFS

config CPU_CFS
	bool "Completely Fair Scheduler (CFS)"
	help
	  The "Completely Fair Scheduler" (CFS), developed by Ingo Molnar,
	  is the CPU scheduler used in the default vanilla kernel.

config CPU_BFS
	bool "Brainfuck Scheduler (BFS)"
	help
	  The "Brainfuck Scheduler" (BFS) is a CPU scheduler developed
	  by Con Kolivas. It is designed for ultra low latency and excellent
	  desktop performance.

	  Not recommended for 4096 CPUs

endchoice

config CPU_BFS_AUTOISO
        bool "Auto SCHED_ISO for X"
        depends on CPU_BFS
        help
	  Tasks (including X) can be run as SCHED_ISO manually with schedtool -I
	  Enable this to automatically run SCHED_ISO for X, this is not default
	  because there is a slim possibility that other tasks (such as multimedia)
	  may stutter if they aren't also ran as SCHED_ISO.

	  If unsure, say N here

config BFS_CUSTOM_RR
	bool "Custom rr_interval for bfs"
	depends on CPU_BFS
	default n
	help
	  Selecting this option will allow you to change the default value
	  for rr_interval within the bfs scheduler.

	  The default rr_interval is 6ms
	  If unsure, say N.

config BFS_RR_INTERVAL
	int "rr_interval value in ms"
	depends on BFS_CUSTOM_RR
	range 1 5000
	default 6
	help
	  This is the smallest duration that any cpu process scheduling unit
	  will run for. Increasing this value can increase throughput of cpu
	  bound tasks substantially but at the expense of increased latencies
	  overall. Conversely decreasing it will decrease average and maximum
	  latencies but at the expense of throughput. This value is in
	  milliseconds and the default value chosen depends on the number of
	  cpus available at scheduler initialisation with a minimum of 6.

	  Valid values are from 1-5000.
	  Default is 6ms
	  3ms is recommended for a very interactive, responsive desktop

config CFS_BOOST
	bool "Boost X Privilege"
	default y
	depends on CPU_CFS
	help
	  This option instructs the kernel to guarantee more CPU time to
	  X than to other tasks, which is sueful if you want to have a
	  faster desktop even under high system load.

	  This option works by automatically boosting X's priority via
	  renicing it to -10. NOTE: CFS does not suffer from
	  "overscheduling" problems when X is reniced to -10, so if this
	  is a predominantly desktop box it makes sense to select this option

	  Say Y here if you are building a kernel for a desktop system.
	  Say N here if you want X to be treated as a normal task.

config CFS_BOOST_NICE
	int "Nice value for privileged tasks"
	depends on CFS_BOOST
	range -20 19
	default -10

